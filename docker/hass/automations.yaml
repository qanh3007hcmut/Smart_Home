- id: '1745157257921'
  alias: Turn on cooling mode
  description: ''
  triggers:
  - trigger: numeric_state
    entity_id:
    - sensor.temperature
    above: 30
    for:
      hours: 0
      minutes: 0
      seconds: 1
  conditions:
  - condition: state
    state: home
    entity_id: device_tracker.member
  actions:
  - action: climate.set_hvac_mode
    metadata: {}
    data:
      hvac_mode: cool
    target:
      entity_id: climate.living_room_conditioner
  - action: climate.set_preset_mode
    metadata: {}
    data:
      preset_mode: home
    target:
      entity_id: climate.living_room_conditioner
  - action: climate.set_temperature
    metadata: {}
    data:
      temperature: 16
      hvac_mode: cool
    target:
      entity_id: climate.living_room_conditioner
  mode: single
- id: '1745158517325'
  alias: Turn off devices while no one home
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - device_tracker.member
    from: home
    to: not_home
  conditions: []
  actions:
  - action: light.turn_off
    metadata: {}
    data:
      transition: 2
    target:
      entity_id: light.living_room_light
  - action: climate.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: climate.living_room_conditioner
  mode: single
- id: '1745158830677'
  alias: Get Home member
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - device_tracker.member
    to: home
    from:
  conditions:
  - condition: numeric_state
    entity_id: sensor.temperature
    above: 30
  actions:
  - action: light.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: light.living_room_light
  - action: climate.set_hvac_mode
    metadata: {}
    data:
      hvac_mode: cool
    target:
      entity_id: climate.living_room_conditioner
  - action: lock.lock
    metadata: {}
    data:
      code: '0000'
    target:
      entity_id: lock.front_door_lock
  - action: light.turn_on
    metadata: {}
    data:
      brightness_pct: 55
    target:
      entity_id: light.living_room_light
  mode: single
- id: '1748614849274'
  alias: camera notification
  description: ''
  triggers:
  - trigger: mqtt
    topic: home/frontdoor/notifications
  conditions:
  - condition: template
    value_template: '{{ trigger.payload_json.timestand != 0 }}'
  actions:
  - action: persistent_notification.create
    metadata: {}
    data:
      title: Frontdoor Camera - {{ now().strftime('%B %d %H:%M') }}
      message: '{{ trigger.payload_json.name | title }} detected and standing for
        {{trigger.payload_json.timestand}}'
      notification_id: frontdoor_camera_{{ trigger.payload_json.name | lower }}
  mode: single
- id: '1748681697677'
  alias: Stove open warning
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.people_detection
    from:
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  conditions:
  - condition: or
    conditions:
    - condition: state
      state: 'on'
      for:
        hours: 0
        minutes: 0
        seconds: 5
      entity_id: switch.gas_stove_left
    - condition: state
      state: 'on'
      for:
        hours: 0
        minutes: 0
        seconds: 5
      entity_id: switch.gas_stove_right
    - condition: state
      state: 'on'
      for:
        hours: 0
        minutes: 0
        seconds: 5
      entity_id: switch.gas_stove_mid
  actions:
  - action: persistent_notification.create
    data:
      title: Active Stove Warning!!! - {{ now().strftime('%B %d %H:%M') }}
      message: 'Stoves are still on, but no one is detected in the kitchen.

        '
  mode: single
- id: '1748704185401'
  alias: Clear empty notification
  description: ''
  triggers:
  - trigger: persistent_notification
    update_type:
    - updated
    - current
    - removed
    - added
  conditions:
  - condition: template
    value_template: '{{ trigger.notification.notification_id.startswith(''frontdoor_camera_'')
      }}'
    enabled: true
  - condition: template
    value_template: '{{ trigger.notification.message.endswith(''0 second'') }}'
  actions:
  - action: persistent_notification.dismiss
    metadata: {}
    data:
      notification_id: '{{ trigger.notification.notification_id}}'
  mode: single
